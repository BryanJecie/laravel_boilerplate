version: "3.8"

networks:
  prod_http_network:
    external: true
  app_network:
    external: true

volumes:
  redis-data:
    external: true
  phpsessions:
    external: false
  app-logs-cache:
    external: false
  app-logs-storage:
    external: false
  app-public:
    external: false

secrets:
  redis_password:
    external: true

services:
  backend:
    image: ghcr.io/sicurobrands/backend-api:latest
    environment:
      PHP_MEMORY_LIMIT: 256M
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=prod_http_network"
        - "traefik.http.services.backend.loadbalancer.server.port=80"
        - "traefik.http.routers.backend.entrypoints=websecure"
        - "traefik.http.routers.backend.tls.certresolver=cloudflare"
        - "traefik.http.routers.backend.rule=Host(`api.sicurobrands.com`)"
        - "swarm.cronjob.enable=true"
        - "swarm.cronjob.schedule=* * * * *"
        - "swarm.cronjob.skip-running=false"
        - "swarm.cronjob.command=php /var/www/app artisan schedule:run"
    volumes:
      - app-logs-cache:/var/www/app/bootstrap/cache
      - app-logs-storage:/var/www/app/storage
      - app-public:/var/www/app/public
      - phpsessions:/tmp
      - ./.env:/var/www/app/.env
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./docker/conf/production.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app_network
      - prod_http_network

  redis:
    image: "redis:latest"
    command:
      - "sh"
      - "-c"
      - 'redis-server --requirepass "$$(cat /run/secrets/redis_password)" --appendonly yes'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
    secrets:
      - redis_password
    networks:
      - app_network

  cronjob:
    image: crazymax/swarm-cronjob
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - "TZ=America/New_York"
      - "LOG_LEVEL=info"
      - "LOG_JSON=false"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    networks:
      - app_network
